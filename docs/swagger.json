{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Water Tracker App",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://watertrackerbackend-1b9z.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "Users",
      "description": "Users operations."
    },
    {
      "name": "Water",
      "description": "Water operations."
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "operationId": "registerUser",
        "description": "Register a new user",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "example": "johndoe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password",
                    "example": "SecurePassword123!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSuccessResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User login",
        "operationId": "loginUser",
        "description": "Login user ",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "example": "johndoe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password",
                    "example": "SecurePassword123!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "sratus",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "dGhpcyBpcyBhIHJlZnJlc2ggdG9rZW4..."
                        },
                        "_id": {
                          "type": "string",
                          "example": "67179fc5a4fcebe60354b048"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh user tokens",
        "operationId": "refreshTokens",
        "description": "Refresh user tokens",
        "security": [],
        "responses": {
          "200": {
            "description": "Successfully refreshed a session!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshSuccessResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401refresh"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User logout",
        "operationId": "logoutUser",
        "description": "logout user",
        "security": [],
        "responses": {
          "204": {
            "description": "Successfully logged out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 204
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged out"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/curent": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user previously logged",
        "operationId": "getCurentUser",
        "description": "Get user previously logged",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get user previously logged",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "67179fc5a4fcebe60354b048"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404-user"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user info by id",
        "operationId": "getUser",
        "description": "Get user info by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get user by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "User information successfully found"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404-user"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Change user info",
        "operationId": "patchUser",
        "description": "Change user info",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "User ID to fetch"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User's name",
                    "example": "Jon Woker"
                  },
                  "gender": {
                    "type": "string",
                    "enum": [
                      "male",
                      "female"
                    ],
                    "description": "User's gender",
                    "example": "female"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password",
                    "example": "SecurePassword123!"
                  },
                  "oldPassword": {
                    "type": "string",
                    "description": "User's password",
                    "example": "SecurePassword123!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "change user info",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401-user"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/waterRate/{id}": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Change user daily norm",
        "operationId": "patchDailyNorm",
        "description": "Change user daily norm",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "User ID to fetch"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dailyNorm": {
                    "type": "number",
                    "description": "User's dailyNorm",
                    "example": 1500
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Get user dailyNorm",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully add daily water rate to user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "dailyNorm": {
                          "type": "number",
                          "description": "User's dailyNorm",
                          "example": 1500
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/avatar/{id}": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Change user avatar",
        "operationId": "patcAvatar",
        "description": "Change user avatar",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "User ID to fetch"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatarUrl": {
                    "type": "string",
                    "format": "binary",
                    "description": "The user's avatar image (formats allowed: jpg, jpeg, png, gif)",
                    "example": "https://example.com/images/user-avatar.jpg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Get user avatar",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully added avatarUrl to user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "avatarUrl": {
                          "type": "string",
                          "description": "URL to the user's avatar image",
                          "example": "https://example.com/images/user-avatar.jpg"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400-user"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/dayInfo/{todayStr}": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get water day",
        "operationId": "getWaterDay",
        "description": "Get water info for a day ",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "todayStr",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2024-10-28T07:54:33.439Z"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get water day info",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully geted water consumption data for today"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/waterDay"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/monthInfo": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get water month",
        "operationId": "getWaterMonth",
        "description": "Get water info for a month",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "month",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 10
            },
            "description": "The month for which to get water consumption data"
          },
          {
            "in": "query",
            "name": "year",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 2024
            },
            "description": "The year for which to get water consumption data"
          }
        ],
        "responses": {
          "200": {
            "description": "Get water month info",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found month data!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/waterMonth"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400-water"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Add water info",
        "operationId": "posthWater",
        "description": "Add water info",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "string",
                    "description": "data`s water",
                    "example": "2024-10-23 13:10"
                  },
                  "waterVolume": {
                    "type": "number",
                    "description": "waterVolume",
                    "example": 500
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully add record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully add record"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400-water"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/{id}": {
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Change water info",
        "operationId": "patchWater",
        "description": "Change water info",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "User ID to fetch"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data",
                  "waterVolume"
                ],
                "properties": {
                  "data": {
                    "type": "string",
                    "description": "data`s water",
                    "example": "2024-10-23 13:10"
                  },
                  "waterVolume": {
                    "type": "number",
                    "description": "waterVolume",
                    "example": 500
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully patched a water record!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a water record!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400-water"
          },
          "404": {
            "$ref": "#/components/responses/404-water"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete water by id",
        "operationId": "deleteWater",
        "description": "Delete water by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Water deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 204
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted water"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404-water"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "AuthSuccessResponse": {
        "type": "object",
        "required": [
          "status",
          "message",
          "data"
        ],
        "properties": {
          "status": {
            "type": "integer",
            "example": 201
          },
          "message": {
            "type": "string",
            "example": "Registration completed successfully!"
          },
          "data": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "banderus.a@gmail.com"
              },
              "gender": {
                "type": "string",
                "enum": [
                  "male",
                  "female"
                ],
                "description": "User's gender",
                "example": "female"
              },
              "dailyNorm": {
                "type": "number",
                "description": "User's dailyNorm",
                "example": 1500
              },
              "_id": {
                "type": "string",
                "example": "67135ea1260aecfe82bea7b7"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "example": "2024-10-15T12:00:00.000Z"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "example": "2024-10-15T12:00:00.000Z"
              }
            }
          }
        }
      },
      "RefreshSuccessResponse": {
        "type": "object",
        "required": [
          "status",
          "message",
          "data"
        ],
        "properties": {
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Successfully refreshed tokens!"
          },
          "data": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string",
                "example": "dGhpcyBpcyBhIHJlZnJlc2ggdG9rZW4..."
              }
            }
          }
        }
      },
      "user": {
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Jon Woker"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "johndoe@example.com"
          },
          "_id": {
            "type": "string",
            "example": "67135ea1260aecfe82bea7b7"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-10-15T12:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-10-15T12:00:00.000Z"
          },
          "gender": {
            "type": "string",
            "enum": [
              "male",
              "female"
            ],
            "description": "User's gender",
            "example": "female"
          },
          "dailyNorm": {
            "type": "number",
            "description": "User's dailyNorm",
            "example": 1500
          },
          "avatarUrl": {
            "type": "string",
            "description": "URL to the user's avatar image",
            "example": "https://example.com/images/user-avatar.jpg"
          }
        }
      },
      "waterDay": {
        "properties": {
          "totalWaterVolume": {
            "type": "integer",
            "example": 1000
          },
          "waterVolumeInPercent": {
            "type": "integer",
            "example": 66
          },
          "waterVolumeTimeEntries": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "_id",
                "waterVolume",
                "time"
              ],
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "6718c07fcf8c9f7bf63c07f3"
                },
                "waterVolume": {
                  "type": "integer",
                  "example": 500
                },
                "time": {
                  "type": "string",
                  "example": "09:40"
                }
              }
            }
          }
        }
      },
      "waterMonth": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "date",
                "dailyNorm",
                "waterVolume",
                "count",
                "percent"
              ],
              "properties": {
                "date": {
                  "type": "string",
                  "example": "23.10",
                  "description": "Date in dd.mm format"
                },
                "dailyNorm": {
                  "type": "integer",
                  "example": 1500,
                  "description": "Daily water consumption norm in milliliters"
                },
                "waterVolume": {
                  "type": "integer",
                  "example": 1600,
                  "description": "Actual water volume consumed"
                },
                "count": {
                  "type": "integer",
                  "example": 3,
                  "description": "Number of water intake entries"
                },
                "percent": {
                  "type": "string",
                  "example": "107",
                  "description": "Water consumption percentage relative to the daily norm"
                }
              }
            }
          }
        }
      },
      "water": {
        "properties": {
          "_id": {
            "type": "string",
            "example": "67135ea1260aecfe82bea7b7"
          },
          "waterVolume": {
            "type": "number",
            "description": "waterVolume",
            "example": 500
          },
          "userId": {
            "type": "string",
            "description": "User's ID",
            "example": "609e126aa08b5b3c88b728db"
          },
          "date": {
            "type": "string",
            "description": "data`s water",
            "example": "2024-10-23 13:10"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-10-15T12:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-10-15T12:00:00.000Z"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Invalid input data"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Incorrect input data"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Email or password invalid",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email or password invalid"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "403": {
        "description": "No access",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 403
                },
                "message": {
                  "type": "string",
                  "example": "No access"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access forbidden"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not Found error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Email in use",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "ConflictError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email in use"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401refresh": {
        "description": "Email or password invalid",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Session not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404-user": {
        "description": "NotFoundError",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User with id ${userId} not found!"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401-user": {
        "description": "Password is invalid",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Password is invalid"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password is invalid"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400-user": {
        "description": "Empty data",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Empty data"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Empty data"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400-water": {
        "description": "Date is required",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Date is required"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Date is required"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404-water": {
        "description": "NotFoundError",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Water record not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}